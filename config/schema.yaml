---
input_csv:
  type: Path
  mode: r
  required: true
  help: Path to the input CSV file.
output_dir:
  type: Path
  mode: w
  required: true
  help: Output directory.
sample_id:
  type: String
  required: true
  help: Sample ID
index_dir:
  type: Path
  mode: r
  required: true
  help: Path the the genome index directory, generated by `moPepGen generateIndex`. See [here](https://uclahs-cds.github.io/package-moPepGen/

entrypoint:
  type: String
  choices:
    - gvf
    - parser
    - fasta
  required: true
  help: When set to `parser`, it expects to receive raw variant files. When set to `gvf`, it expects to receive GVF files that are already parsed by moPepGen's parsers.
ucla_cs:
  type: Bool
  default: true
  help: Whether to use UCLA-CDS' cluster specific configuration. Defaults to `true`.
  required: false
save_intermediate_files:
  type: Bool
  default: false
  help: Whether to save intermediate files. Defaults to `false`.
  required: false
variant_peptide:
  type: Path
  mode: r
  required: false
  help: Path to the variant peptide FASTA file. Only need when using 'fasta' entrypoint.
novel_orf_peptide:
  type: Path
  mode: r
  required: false
  help: Path to the novel ORF peptide FASTA file output by `moPepGen callNovelORF`.
alt_translation_peptide:
  type: Path
  mode: r
  required: false
  help: 'Alternative translation peptide database generated by moPepGen `callAltTranslation`, to be split together (default: None)'
enable_filter_fasta:
  type: Bool
  required: false
  default: false
  help: Whether to run `filterFasta` on the variant, noncoding, and/or the merged FASTA file. Defaults to `false`. If `true` is given, corresponding namespaces must be specified under `params.enable_filter_fasta` according to `database_processing_modes`.
exprs_table:
  type: Path
  mode: r
  required: false
  help: Gene expression table used to filter variant peptide FASTA. Required when `enable_filter_fasta` is `true`.
database_processing_modes:
  type: List
  choices:
    - plain
    - merge
    - split
  default: []
  help: Database postprocessing modes. Must be at least one of 'merge', 'split' and 'plain'. For 'merge', noncoding and variant peptides are merged into one database FASTA. For 'split', noncoding and variant peptides are split into separate database files. For 'plain', the FASTA file output by moPepGen is first filtered (if specified) and then encoded and decoyed. Filter (if specifed), encode and decoy database are done in the same way as 'plain' for 'merge' and 'split'.
process_unfiltered_fasta:
  type: Bool
  required: false
  default: false
  help: Whether the unfiltered fasta files should be processed (filtering, encode and decoy). Defaults to `true` unless using FASTA entrypoint or `enable_filter_fasta` is `false`.
enable_encode_fasta:
  type: Bool
  required: false
  default: false
  help: Whether to run `encodeFasta` on the variant peptide FASTA called by `callVariant` ï¼ˆruns once after `filterFasta` and `splitFasta`, if used). Defaults to `false`.
enable_decoy_fasta:
  type: Bool
  required: false
  default: false
  help: Whether to run `decoyFasta` on the variant peptide FASTA called by `callVariant` (runs once after `filterFasta`, `splitFasta` and `encodeFasta`, if used). Defaults to `false`.
parseREDItools:
  type: Namespace
  elements:
    transcript_id_column:
      type: Integer
      required: false
      help: 'The column index for transcript ID. If your REDItools table doesnot contains it, use the `AnnotateTable.py` from the REDItoolspackage. (default: 16)'
    min_coverage_alt:
      type: Integer
      required: false
      help: 'Minimal read coverage of alterations to be parsed. (default: 3)'
    min_coverage_dna:
      type: Integer
      required: false
      help: 'Minimal read coverage at the alteration site of WGS. Set it to -1 to skip checking this. (default: 10)'
parseSTARFusion:
  type: Namespace
  elements:
    min_est_j:
      type: Number
      required: false
      help: 'Minimal estimated junction reads to be included. (default: 5.0)'
parseArriba:
  type: Namespace
  elements:
    min_split_read1:
      type: Integer
      required: false
      help: 'Minimal `split_read1` value. (default: 1)'
    min_split_read2:
      type: Integer
      required: false
      help: 'Minimal `split_read2` value. (default: 1)'
    min_confidence:
      type: String
      choices:
        - low
        - medium
        - high
      required: false
      help: 'Minimal confidence value. (default: medium)'
parseFusionCatcher:
  type: Namespace
  elements:
    max_common_mapping:
      type: Integer
      required: false
      help: 'Maximal number of common mapping reads. (default: 0)'
    min_spanning_unique:
      type: Integer
      required: false
      help: 'Minimal spanning unique reads. (default: 5)'
parseCIRCexplorer:
  type: Namespace
  elements:
    min_read_number:
      type: Integer
      required: false
      default: 1
      help: 'Minimal number of junction read counts. (default: 1)'
    min_fpb_circ:
      type: Integer
      required: false
      help: 'Minimal CRICscore value for CIRCexplorer3. Recommends to 1, defaults to None (default: None)'
    min_circ_score:
      type: Integer
      required: false
      help: 'Minimal CIRCscore value for CIRCexplorer3. Recommends to 1, defaults to None (default: None)'
    intron_start_range:
      type: String
      required: false
      help: 'The range of difference allowed between the intron start and the reference position. (default: -2,0)'
    intron_end_range:
      type: String
      required: false
      help: 'The range of difference allowed between the intron end and the reference position. (default: -100,5)'
callVariant:
  type: Namespace
  elements:
    max_variants_per_node:
      type: Integer
      required: false
      help: 'Maximal number of variants per node. This argument can be useful when there are local regions that are heavily mutated. When creating the cleavage graph, nodes containing variants larger than this value are skipped. Set to -1 to avoid this check. When multiple values are specified, they will be used as retry stretagy. (default: [7])'
    additional_variants_per_misc:
      type: Integer
      required: false
      help: 'Additional variants allowed for every miscleavage. This argument is used together with --max-variants-per-node to handle hypermutated regions. Set to -1 to avoid this check. When multiple values are specified, they will be used as retry stretagy. (default: [2])'
    max_adjacent_as_mnv:
      type: Integer
      required: false
      help: 'Max number of adjacent variants that should be merged. (default: 2)'
    min_nodes_to_collapse:
      type: Integer
      required: false
      help: 'When making the cleavage graph, the minimal number of nodes to trigger pop collapse. (default: 30)'
    naa_to_collapse:
      type: Integer
      required: false
      help: 'The number of bases used for pop collapse. (default: 5)'
    selenocysteine:
      type: Bool
      required: false
      help: '| Include peptides of selenoproteins where the UGA is treated as termination instead of Sec.'
    w2f_reassignment:
      type: Bool
      required: false
      help: 'Include peptides with W > F (Tryptophan to Phenylalanine) reassignment.'
    cleavage_rule:
      type: String
      required: false
      help: 'Enzymatic cleavage rule. (default: trypsin)'
    miscleavage:
      type: Integer
      required: false
      help: 'Number of cleavages to allow per non-canonical peptide. (default: 2)'
    min_mw:
      type: Number
      required: false
      help: 'The minimal molecular weight of the non-canonical peptides. (default: 500.0)'
    min_length:
      type: Integer
      required: false
      help: 'The minimal length of non-canonical peptides, inclusive. (default: 7)'
    max_length:
      type: Integer
      required: false
      help: 'The maximum length of non-canonical peptides, inclusive. (default: 25)'
    timeout_seconds:
      type: Integer
      required: false
      help: 'Time out in seconds for each transcript. (default: 1800)'
filterFasta:
  type: Namespace
  elements:
    skip_lines:
      type: Integer
      required: false
      help: 'Number of lines to skip when reading the expression table.Defaults to 0 (default: 0)'
    delimiter:
      type: String
      required: false
      help: "Delimiter of the expression table. Defaults to tab. (default: '\t')"
    tx_id_col:
      type: Integer
      required: false
      help: 'The index for transcript ID in the RNAseq quantification results. Index is 1-based. (default: None)'
    quant_col:
      type: Integer
      required: false
      help: 'The column index number for quantification. Index is 1-based. (default: None)'
    quant_cutoff:
      type: Number
      required: false
      help: 'Quantification cutoff. (default: None)'
    keep_all_coding:
      type: Bool
      required: false
      help: 'Keep all coding genes, regardless of their expression level. (default: false)'
    keep_all_noncoding:
      type: Bool
      required: false
      help: 'Keep all noncoding genes, regardless of their expression level. (default: false)'
splitFasta:
  type: Namespace
  elements:
    order_source:
      type: String
      required: false
      help: 'Order of sources, separate by comma. E.g., SNP,SNV,Fusion (default: None)'
    group_source:
      type: String
      required: false
      help: 'Group sources. E.g., PointMutation:gSNP,sSNV INDEL:gINDEL,sINDEL (default: None)'
    max_source_groups:
      type: Integer
      required: false
      help: 'Maximal number of different source groups to be separate intoindividual database FASTA files. Defaults to 1 (default: 1)'
    additional_split:
      type: String
      required: false
      help: 'For peptides that were not already split into FASTAs up tomax_source_groups, those involving the following source will be splitinto additional FASTAs with decreasing priority (default: None)'
summarizeFasta:
  type: Namespace
  elements:
    order_source:
      type: String
      required: false
      help: 'Order of sources, separate by comma. E.g., SNP,SNV,Fusion (default: None)'
    cleavage_rule:
      type: String
      required: false
      help: 'Enzymatic cleavage rule. (default: trypsin)'
    invalid_protein_as_noncoding:
      type: String
      required: false
      help: 'Treat any transcript that the protein sequence is invalid (contains the * symbol) as noncoding. (default: False)'
decoyFasta:
  type: Namespace
  elements:
    decoy_string:
      type: String
      required: false
      help: "The decoy string that is combined with the FASTA header for decoy sequences. `str` Default: `DECOY_`"
    decoy_string_position:
      type: String
      required: false
      choices:
        - prefix
        - suffix
      help: "Should the decoy string be placed at the start or end of FASTA headers? `str` Default: 'prefix'"
    method:
      type: String
      choices:
        - 'reverse'
        - 'shuffle'
      required: false
      help: "Method to be used to generate the decoy sequences from target sequences. `str`. Default: 'reverse'."
    non_shuffle_pattern:
      type: String
      required: false
      help: 'Residues to not shuffle and keep at the original position. Separate by common (e.g. "K,R") str'
    shuffle_max_attempts:
      type: Integer
      required: false
      help: "Maximal attempts to shuffle a sequence to avoid any identical decoy sequence. `int` Default: 30"
    seed:
      type: Integer
      required: false
      help: "Random seed number. `int`"
    order:
      type:
      required: false
      choices:
        - 'juxtaposed'
        - 'target_first'
        - 'decoy_first'
      help: "Order of target and decoy sequences to write in the output FASTA. `str` Default: 'juxtaposed'."
    keep_peptide_nterm:
      type: Bool
      required: false
      help: "keep the peptide N terminus constant. `str`. Default: 'true'"
    keep_peptide_cterm:
      type: Bool
      required: false
      help: "Whether to keep the peptide C terminus constant. `str` Default: 'true'."
